Boot image tools for Samsung Galaxy Tab 4 7.0, pxa1088 board Marvell PXA1088

Unpack boot.img:
$ mkdir -p boot
$ ./pxa1088-unpackbootimg -i boot.img -o boot
$ mkimage -l boot.img-uImage > uImage.txt

Unpack ramdisk:
$ mkdir -p boot/ramdisk
$ cd boot/ramdisk/
$ gunzip -c ../boot.img-ramdisk.gz | cpio -i
$ cd ../

Unpack zImage:
$ gunzip -c boot.img-zImage.gz

Repack ramdisk:
Ramdisk can be packed only with minigzip not normal gzip.
Of course only if you need completely the same output image as input.
$ mkbootfs ramdisk | minigzip > boot.img-ramdisk-new.gz

Repack uImage:
WARNING!!! Repacked image always will has different hashsum because
uImage has timestamp in header and mkimage will take machine time.
But resulted uImage still will be valid.
zImage is packed with gzip maximum compression without header.
uImage header information can be found in uImage.txt.
zImage.new - your altered unpacked kernel.
$ gzip -n -9 -k zImage.new
$ mkimage -A arm64 -O linux -T kernel -C gzip -a 01000000 -e 01000000 -d zImage.new.gz -n "pxa1928dkb linux" "boot.img-uImage.new"

Repack boot.img:
It has unknown value flag - so you can alter it if needed.
$ ./pxa1088-mkbootimg --kernel boot.img-uImage.new \
--ramdisk boot.img-ramdisk-new.gz --dt boot.img-dt \
--signature boot.img-signature --unknown 0x03000000 -o ../boot-new.img
$ cd ../

I'm not sure about boot image signature, you can try without --signature
option. By comparing boot image to recovery image, I found a different
signature and of course a different ramdisk but the rest is the same, including
kernel and device tree table.
You can use only first 16 bytes from signature ("SEANDROIDENFORCE") to get rid of
annoying red phrase "android is not sealinux enforces".
Of course resulted image will never be the same but still is valid.
So without signature you can use this code:
$ ./pxa1088-mkbootimg --kernel boot.img-uImage.new \
--ramdisk boot.img-ramdisk-new.gz --dt boot.img-dt \
--unknown 0x03000000 -o ../boot-new.img
$ echo "SEANDROIDENFORCE" >> boot-new.img

TODO: Implement different signature sizes (256 bytes in Tab4 and 272 bytes in Xcover 3).

Unknown seems to be different in different devices so I added flag for writing it.
As I understand 0x03000000 is used for Xcover 3 and 0x02000000 for Tab4.

To confirm this tools reliability, you can unpack and then repack original
boot/recovery image without modification. You will got two identical image,
check it using a diff tool.

Generate kernel spesific device tree table:
$ ./pxa1088-dtbTool -o boot.img-dt-new -p kernel/scripts/dtc/ kernel/arch/arm/boot/dts/

Repack a new recovery as a flashable Odin:
$ tar -H ustar -c recovery-testkey.img > recovery-testkey.img.tar
$ md5sum -t recovery-testkey.img.tar >> recovery-testkey.img.tar
$ mv recovery-testkey.img.tar recovery-testkey.img.tar.md5

DISCLAIMER:

USE THIS TOOLS AT YOUR OWN RISK, I DON'T OWN TAB 4 7.0 FOR TESTING

Ketut P. Kumajaya, June 2014
